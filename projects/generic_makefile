# pretty much generic.
# only TARGET and OBJECTS should be set:
#TARGET := main
#OBJECTS := main.o

CROSSCOMPILE ?= avr-

CC := $(CROSSCOMPILE)gcc
CPP := $(CROSSCOMPILE)gcc
CXX := $(CROSSCOMPILE)g++
AS := $(CROSSCOMPILE)as
AR := $(CROSSCOMPILE)ar
LD := $(CROSSCOMPILE)gcc
GDB := $(CROSSCOMPILE)gdb
NM := $(CROSSCOMPILE)nm
OBJCOPY := $(CROSSCOMPILE)objcopy
OBJDUMP := $(CROSSCOMPILE)objdump
READELF := $(CROSSCOMPILE)readelf
SIZE := $(CROSSCOMPILE)size

CLOCK := 12000000
DEVICE := attiny85
UPLOAD := ../../micronucleus/commandline/micronucleus --run

CFLAGS += -Iusbdrv -I.
CFLAGS += -Wall -Werror -g -gdwarf-4
CFLAGS += -Os
CFLAGS += -DF_CPU=$(CLOCK) -mmcu=$(DEVICE)
CFLAGS += -Wa,-adhlns=$(<:%=%.lst)
CFLAGS += -std=c11
LDFLAGS += -mmcu=$(DEVICE) -Wl,--cref,-Map=$(@:%.elf=%.map)

.PHONY: all flash clean

all:	${TARGET}.hex ${TARGET}.asm ${TARGET}.bin

flash:	${TARGET}.hex
	$(UPLOAD) main.hex

clean:
	rm -f *.asm *.hex *.elf *.bin *.o */*.o *.lst */*.lst *.map

${TARGET}.elf: ${OBJECTS}
	$(CC) $(LDFLAGS) $^ -o $@

%.hex: %.elf
	$(OBJCOPY) -j .text -j .data -O ihex $< $@
	$(SIZE) $@

%.asm: %.elf
	$(OBJDUMP) -d $< > $@

%.bin: %.elf
	$(OBJCOPY) -j .text -j .data -O binary $< $@

%.o: %.S
	$(CC) $(CFLAGS) -x assembler-with-cpp -c -o $@ $<

